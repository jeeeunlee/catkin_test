%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/lee/catkin_vins/output"

cam0_calib: "camera_camera_calib_left.yaml"
cam1_calib: "camera_camera_calib_right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

#body_T_cam0: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 2.5265425647612583e-03, -6.5197522649618200e-04,
#       9.9999659574969191e-01, 7.1988493405275231e-02,
#       -9.9997474855281565e-01, -6.6438683976999258e-03,
#       2.5221557143513262e-03, 7.7646002262627481e-02,
#       6.6422013972655680e-03, -9.9997771672223701e-01,
#       -6.6874477947997946e-04, 5.6823871710521201e-01, 0., 0., 0., 1. ]
#body_T_cam1: !!opencv-matrix
#   rows: 4
#   cols: 4
#   dt: d
#   data: [ 4.2805920506795436e-03, 2.5309779637605612e-05,
#       9.9999083790358356e-01, 7.4107469865489023e-02,
#       -9.9996808708323437e-01, -6.7454220713420998e-03,
#       4.2806653895171576e-03, 2.8525330860939054e-02,
#       6.7454686118321727e-03, -9.9997724906144492e-01,
#       -3.5654281687058642e-06, 5.6819156539625815e-01, 0., 0., 0., 1. ]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.6503354372678922e-03, -2.0830378054299548e-03,
       9.9999431832164520e-01, 6.4302907330353418e-02,
       -9.9996178334287000e-01, -8.3366526841963662e-03,
       2.6328835467930300e-03, 8.3466638125158643e-02,
       8.3311209220516824e-03, -9.9996307990621580e-01,
       -2.1050531247257531e-03, 6.1605935885825036e-01, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 4.0617102866018495e-03, -1.4496461963030005e-03,
       9.9999070047448613e-01, 6.6101241719131343e-02,
       -9.9995628040674078e-01, -8.4285244013955207e-03,
       4.0493519889933660e-03, 3.8379840046111877e-02,
       8.4225758924095229e-03, -9.9996342858242604e-01,
       -1.4838170426230146e-03, 6.1615143179578458e-01, 0., 0., 0., 1. ]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/lee/catkin_vins/output" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
